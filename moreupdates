import { Canvas } from "@react-three/fiber";
import { OrbitControls, Stars, Text, useTexture, useCursor, Effects, useVideoTexture, LensFlare } from "@react-three/drei";
import { useRef, useState, useEffect } from "react";
import { useFrame, extend } from "@react-three/fiber";
import { Bloom, DepthOfField, EffectComposer } from "@react-three/postprocessing";
import * as THREE from "three";
import { Leva, useControls } from "leva";

extend({ EffectComposer, Bloom, DepthOfField });

function Planet({ name, size, distance, speed, texture, info, setSelectedPlanet }) {
  const planetRef = useRef();
  const [hovered, setHovered] = useState(false);
  const textureMap = useTexture(texture);
  const trailRef = useRef();
  const trailPoints = useRef([]);

  useCursor(hovered);

  useFrame((state) => {
    // Orbital movement
    const time = state.clock.elapsedTime * speed;
    const x = Math.sin(time) * distance;
    const z = Math.cos(time) * distance;
    planetRef.current.position.set(x, 0, z);
    
    // Trail updates
    trailPoints.current.push(new THREE.Vector3(x, 0, z));
    if (trailPoints.current.length > 50) trailPoints.current.shift();
    trailRef.current.geometry.setFromPoints(trailPoints.current);
  });

  return (
    <group>
      {/* Planet */}
      <mesh
        ref={planetRef}
        onClick={() => setSelectedPlanet(info)}
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
      >
        <sphereGeometry args={[size, 32, 32]} />
        <meshStandardMaterial
          map={textureMap}
          emissive={hovered ? "white" : "black"}
          emissiveIntensity={0.5}
        />
      </mesh>

      {/* Orbital trail */}
      <line ref={trailRef}>
        <bufferGeometry />
        <lineBasicMaterial color="rgba(255,255,255,0.3)" linewidth={1} />
      </line>

      {/* Label */}
      <Text
        position={[0, size + 0.5, 0]}
        fontSize={0.3}
        color="white"
        anchorX="center"
        visible={hovered}
      >
        {name}
      </Text>
    </group>
  );
}

function AsteroidBelt() {
  const count = 2000;
  const positions = useRef(new Float32Array(count * 3));
  
  useEffect(() => {
    for (let i = 0; i < count * 3; i += 3) {
      const angle = Math.random() * Math.PI * 2;
      const radius = 15 + Math.random() * 3;
      positions.current[i] = Math.sin(angle) * radius;
      positions.current[i + 1] = (Math.random() - 0.5) * 0.5;
      positions.current[i + 2] = Math.cos(angle) * radius;
    }
  }, []);

  return (
    <points>
      <bufferGeometry>
        <bufferAttribute
          attach="attributes-position"
          count={count}
          itemSize={3}
          array={positions.current}
        />
      </bufferGeometry>
      <pointsMaterial color="gray" size={0.05} />
    </points>
  );
}

function Sun() {
  const texture = useTexture("https://i.imgur.com/3JYdQEj.jpg");
  return (
    <group>
      <mesh>
        <sphereGeometry args={[3, 32, 32]} />
        <meshStandardMaterial
          map={texture}
          emissive="orange"
          emissiveIntensity={5}
        />
      </mesh>
      <LensFlare
        position={[0, 0, 0]}
        streak={[8, 20, 0]}
        flareSize={2}
        flareSpeed={0.1}
      />
    </group>
  );
}

function InfoPanel({ planet }) {
  if (!planet) return null;
  
  return (
    <div style={{
      position: 'absolute',
      top: '20px',
      left: '20px',
      background: 'rgba(0,0,0,0.7)',
      padding: '20px',
      color: 'white',
      borderRadius: '10px'
    }}>
      <h2>{planet.name}</h2>
      <p>Diameter: {planet.diameter} km</p>
      <p>Orbital Period: {planet.orbitalPeriod} days</p>
      <p>Temperature: {planet.temperature}</p>
      <p>{planet.description}</p>
    </div>
  );
}

export default function App() {
  const [selectedPlanet, setSelectedPlanet] = useState(null);
  const controls = useControls({
    planetSpeed: { value: 1, min: 0, max: 5 },
    bloom: { value: true },
    dof: { value: true }
  });

  return (
    <>
      <Leva />
      <Canvas camera={{ position: [0, 40, 40], fov: 45 }}>
        <ambientLight intensity={0.5} />
        <pointLight position={[0, 0, 0]} intensity={2} />

        {/* Celestial bodies */}
        <Sun />
        <AsteroidBelt />
        
        {/* Planets */}
        <Planet
          name="Earth"
          size={0.8}
          distance={12}
          speed={0.01 * controls.planetSpeed}
          texture="https://i.imgur.com/5Q6yfQq.jpg"
          info={{
            name: "Earth",
            diameter: "12,742",
            orbitalPeriod: "365",
            temperature: "15Â°C",
            description: "The Blue Planet - Our home world"
          }}
          setSelectedPlanet={setSelectedPlanet}
        />

        {/* Add other planets similarly */}

        {/* Effects */}
        <EffectComposer>
          {controls.bloom && <Bloom intensity={0.5} luminanceThreshold={0.8} />}
          {controls.dof && <DepthOfField focusDistance={0} focalLength={0.02} bokehScale={2} />}
        </EffectComposer>

        {/* Stars */}
        <Stars radius={100} depth={50} count={5000} factor={4} fade />

        {/* Controls */}
        <OrbitControls
          enableZoom={true}
          minDistance={10}
          maxDistance={100}
          autoRotateSpeed={0.5}
        />
      </Canvas>

      <InfoPanel planet={selectedPlanet} />
    </>
  );
}
